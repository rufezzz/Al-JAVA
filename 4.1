class Stack {
    private final int maxS;
    private final long[] stackArrays;
    private int top;

    public Stack(int size) // СОЗДАНИЕ СТЭКА
    {
        maxS = size;
        stackArrays = new long[maxS];
        top = -1;
    }

    public void push(long j) // ДОБАВЛЕНИЕ ПИСЬМА
    {
        stackArrays[++top] = j;
    }

    public long pop() // ЧИТ И ВЫБРАСЫВАНИЕ ПИСЬМА
    {
        return stackArrays[top--];
    }

    public long peek()// ЧИТ ПИСЬМА
    {
        return stackArrays[top];
    }

    public boolean isEmpty()// НЕТ ПИСЬМА В СТОПКЕ
    {
        return (top == -1);
    }

    public boolean isFull()// ЕСТЬ ПИСЬМА В СТОПКЕ
    {
        return (top == maxS - 1);
    }
    public int size()// КОЛ-ВО ПИСЕМ В СТОПКЕ
    {
        return top + 1;
    }
}

public class Main
{
    public static void main(String[] args)
    {
        Stack stack;
        stack = new Stack(10);

        stack.push(11);
        stack.push(22);
        stack.push(66);
        stack.push(99);

        if (stack.isEmpty())
        {
            System.out.println("Стэк пуст! ERROR");
            return;
        }
        else
        {
            System.out.println("Стэк НЕ пуст");
        }

        System.out.println("Размер: " +stack.size());

        System.out.print("Последнее значение: " + stack.peek());
        System.out.println(" ");

        while (!stack.isEmpty())
        {
            long value = stack.pop();
            System.out.print(value);
            System.out.print(" ");
        }


    }
}
