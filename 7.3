class stack {
    public int iData; // данные (ключ)
    public double dData; // данные
    public stack next; // следующий элемент в списке

    public stack(int id, double dd) // конструктор
    {
        iData = id; // инициализация данных
        dData = dd; // (‘next' автоматически присваивается null)
    }

    public void displayLink() // вывод содержимого элемента
    {
        System.out.print("{" + iData + ", " + dData + "}");
    }
}

class LinkedStack {
    private stack first;

    public LinkedStack() {
        first = null;
    }

    public boolean isEmpty() {
        return (first == null);
    }

    public void display() {
        stack current = first; //
        while (current != null) {
            current.displayLink();
            System.out.print(" ");
            current = current.next;
        }
        System.out.println();
    }

    public void push(int id, double dd) {
        stack newstack = new stack(id, dd);
        if (first == null) {
            first = newstack;
        } else {
            stack current = first;
            while (current.next != null) {
                current = current.next;
            }
            current.next = newstack;
        }
    }

    public stack pop() {
        if (first == null) {
            return null;
        } else if (first.next == null) {           //ДЛЯ СЛУЧАЯ НУЛЯ И КОГДА ЕСТЬ ОДНО ЗНАЧЕНИЕ
            stack temp = first;
            first = null;
            return temp;
        } else {
            stack current = first;//НАМ ПРОШЛЫЕ ЗНАЧЕНИЯ НЕ ИНТЕРЕСНЫ МЫ ПЕРЕШЛИ К СЛЕДУЮЩЕМУ (2-3)
            while (current.next.next != null) {
                current = current.next;
            }
            stack temp = current.next;
            current.next = null;
            return temp;
        }
    }

    public stack peek()
    {
        if (first == null) {
            return null;
        } else {
            stack current = first;
            while (current.next != null) {
                current = current.next;
            }
            return current;
        }
    }

    public static void main(String[] args) {
        System.out.println("СТЕК ");
        LinkedStack stack = new LinkedStack();
        stack.push(1, 1.9);
        stack.push(3, 3.9);
        stack.push(2, 2.9);
        stack.display();
        System.out.print("Первый элемент: ");
        stack.peek().displayLink();
        System.out.println();

        //поочередное извлечение
        System.out.print("- ");
        stack.pop().displayLink();
        System.out.println();
        System.out.print("- ");
        stack.pop().displayLink();
        System.out.println();
        System.out.print("- ");
        stack.pop().displayLink();

        System.out.println();

        System.out.println("извлечение циклом:");

        stack.push(5, 1.9);
        stack.push(8, 3.9);
        stack.push(9, 2.9);
        stack.display();
        System.out.println();

        //извлечение циклом
        while (!stack.isEmpty())
        {
            stack.pop().displayLink();
            System.out.print(" ");
        }
    }
}
