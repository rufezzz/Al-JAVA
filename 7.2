class DoublaLink
{
    public int iData; // данные (ключ)
    public double dData; // данные
    public DoublaLink previous; //предидущий в списке
    public DoublaLink next; // следующий элемент в списке

    public DoublaLink(int id, double dd) // конструктор
    {
        iData = id; // инициализация данных
        dData = dd; // (‘next' автоматически присваивается null)
        previous = null;
        next = null;
    }

    public void displayLink() // вывод содержимого элемента
    {
        System.out.print("| {" + iData +", "+ dData + "} | ");
    }

}
class DoublyLinkList {
    private DoublaLink first; // ссылка на 1й элемент списка

    public DoublyLinkList() // консруктор
    {
        first = null; //список пока не содержит элементов
    }

    public boolean isEmpty() // true,если список пуст
    {
        return (first == null);
    }

    // вставка элемента в начало списка
    public void insertFirst(int id, double dd) { // создание нового элемента
        DoublaLink newLink = new DoublaLink(id, dd);
        if (isEmpty()) {
            first = newLink;
        } else {
            first.previous = newLink;
            newLink.next = first;
            first = newLink;
        }
    }

    public DoublaLink deleteFirst() {
        DoublaLink temp = first;
        if (first.next == null) {
            first = null;
        } else {
            first.next.previous = null;// устанавливаем ссылку previous второго элемента в null, чтобы отключить его от списка.
        }
        first = first.next;//первый элемент теперь второй элемент
        return temp;
    }


    public void deleteById(int id) {
        DoublaLink current = first;
        while (current != null) {
            if (current.iData == id) {
                if (current.previous == null) {
                    first = current.next;
                    if (first != null) {
                        first.previous = null;
                    }
                } else {
                    current.previous.next = current.next;
                    if (current.next != null) {
                        current.next.previous = current.previous;
                    }
                }
                break;
            }
            current = current.next;
        }
    }


    public void displayList() {
        System.out.print("Список (F-->L): ");
        DoublaLink current = first; // от начала списка
        while (current != null) // перемещение до конца списка
        {
            current.displayLink(); // вывод данных
            current = current.next; // переход к новому элементу
        }
        System.out.println("");
    }
}

class DoublyLinkListApp {
    public static void main(String[] args) {
        DoublyLinkList theList = new DoublyLinkList(); // создание нового списка
        theList.insertFirst(2, 2.1);
        theList.insertFirst(4, 8.99);
        theList.insertFirst(5, 4.55);
        theList.insertFirst(1, 1.9);
        theList.insertFirst(7, 7.21);
        theList.insertFirst(11, 10.11);
        theList.insertFirst(3, 0.5);


        theList.displayList(); // вывод содержимого списка

        theList.deleteFirst();
        theList.displayList(); // вывод содержимого списка после удаления
        theList.deleteById(5);
        theList.displayList();

    }
}
