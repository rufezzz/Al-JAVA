import java.util.Arrays;

class HighArray
{
    private long[] a;
    private int nElems;

    public HighArray(int max)
    {
        a = new long[max];
        nElems = 0;
    }
    public boolean find(long searchKey)
    {
        int j;
        for(j = 0; j < nElems; j++) {
            if (a[j] > searchKey) {
                return false;
            }
            else if (a[j] == searchKey) {
                break;
            }
        }
        return true;
    }

    public void insert(long value)
    {
        int i = nElems - 1;
        while(i >= 0 && a[i] > value)
        {
            a[i+1] = a[i];
            i--;
        }
        a[i+1] = value;
        nElems++;

    }

    public boolean delete(long value)
    {
        int j;

        for (j = 0; j < nElems; j++)
        {
            if (a[j] > value)
            {
                return false;
            }
            else if (a[j] == value)
            {
                break;
            }
        }

        for (int k = j; k < nElems; k++)
        {
            a[k] = a[k+1];
        }
        nElems--;
        return true;
    }

    public void display()
    {
        for(int j = 0; j < nElems; j++)
        {
            System.out.print(a[j] + " ");
            System.out.println("");
        }
    }
}


public class Main {
    public static void main(String[] args) {
        int maxSize = 100;
        HighArray arr;
        arr = new HighArray(maxSize);

        arr.insert(00);
        arr.insert(11);
        arr.insert(22);
        arr.insert(24);
        arr.insert(33);
        arr.insert(44);
        arr.insert(55);
        arr.insert(66);
        arr.insert(77);
        arr.insert(85);
        arr.insert(88);

        arr.display();

        int searchKey = 13;
        if (arr.find(searchKey))
        {
            System.out.println("Found " + searchKey);
        }
        else
        {
            System.out.println("Can't find " + searchKey);
        }


        arr.delete(13);

        arr.display();
    }

}
